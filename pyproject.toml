[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "langextract-outlines"
version = "0.1.0"
description = "LangExtract structured generation provider plugin for Outlines"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "Apache-2.0"}
dependencies = [
    "langextract>=1.0.0",
    "outlines>=1.2.3",
]


[project.entry-points."langextract.providers"]
outlines = "langextract_outlines.provider:OutlinesStructuredGenerationModel"

[project.optional-dependencies]
transformers = [
    "outlines[transformers]>=1.2.3",
]

[tool.setuptools.packages.find]
where = ["."]
include = ["langextract_outlines*"]

[dependency-groups]
dev = [
    "mypy>=1.17.1",
    "ruff>=0.12.9",
]

[tool.ruff]
line-length = 100
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "ARG",  # flake8-unused-arguments
    "SIM",  # flake8-simplify
    "TCH",  # flake8-type-checking
    "PTH",  # flake8-use-pathlib
]
ignore = [
    "E501",  # line too long, handled by formatter
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "W191",  # indentation contains tabs
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # allow unused imports in __init__.py

[tool.ruff.lint.isort]
known-first-party = ["langextract_outlines"]

[tool.mypy]
python_version = "3.10"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
